createRoleContract = function(
  _role,
  _orgId,
  _deptId,
  _approverPK,
  _onSuccess,
  _onFailure
) {
  //bytecode
  let bytecode =
    "0x60606040526040516103683803806103688339810160405280805182019190602001805190602001909190805190602001909190805182019190505042846040518083815260200182805190602001908083835b6020831015156100785780518252602082019150602081019050602083039250610053565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405180910390206000816000191690555083600190805190602001906100c6929190610280565b508260028160001916905550816003816000191690555080600490805190602001906100f3929190610280565b507f6cee9ccd15bb574c288d3467d926f620904558cfebed269b9aa32aadd2ddf0d242600054600160025460035460046040518087815260200186600019166000191681526020018060200185600019166000191681526020018460001916600019168152602001806020018381038352878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101e05780601f106101b5576101008083540402835291602001916101e0565b820191906000526020600020905b8154815290600101906020018083116101c357829003601f168201915b50508381038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b50509850505050505050505060405180910390a150505050610325565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102c157805160ff19168380011785556102ef565b828001600101855582156102ef579182015b828111156102ee5782518255916020019190600101906102d3565b5b5090506102fc9190610300565b5090565b61032291905b8082111561031e576000816000905550600101610306565b5090565b90565b6035806103336000396000f3006060604052600080fd00a165627a7a723058208cd8cd328596d130081acc4d58dfd7dd38075faadb6e451706eb50250049a7e90029";

  //abi
  let abi = [
    {
      inputs: [
        { name: "_role", type: "string" },
        { name: "_orgId", type: "bytes32" },
        { name: "_deptId", type: "bytes32" },
        { name: "_approverPK", type: "string" }
      ],
      payable: true,
      stateMutability: "payable",
      type: "constructor"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: false, name: "time", type: "uint256" },
        { indexed: false, name: "id", type: "bytes32" },
        { indexed: false, name: "role", type: "string" },
        { indexed: false, name: "orgId", type: "bytes32" },
        { indexed: false, name: "deptId", type: "bytes32" },
        { indexed: false, name: "approverPK", type: "string" }
      ],
      name: "RoleCreated",
      type: "event"
    }
  ];

  let args = [_role, _orgId, _deptId, _approverPK];

  //options
  let options = {
    data: bytecode,
    arguments: args
  };

  //create contract
  var contract = new web3.eth.Contract(abi, null, options);

  //deploy the contract
  contract
    .deploy(options)
    .send({ from: web3.eth.accounts[0], gas: 4700000 })
    .then(function(instance) {
      if (instance) {
        contract.options.address = instance.options.address;
        contract.getPastEvents("RoleCreated", {}, function(error, events) {
          if (error) {
            _onFailure();
          } else {
            for (let event of events) {
              event.contract = contract;
              addToLog(event);
            }
            _onSuccess(instance);
          }
        });
      } else {
        _onFailure();
      }
    });
};
