createRoleContract = function(_PK, _role, _approverPK, _onSuccess, _onFailure) {
  //abi
  let abi = [
    {
      inputs: [
        { name: "_PK", type: "string" },
        { name: "_role", type: "string" },
        { name: "_approverPK", type: "string" }
      ],
      payable: true,
      stateMutability: "payable",
      type: "constructor"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: false, name: "time", type: "uint256" },
        { indexed: false, name: "id", type: "bytes32" },
        { indexed: false, name: "PK", type: "string" },
        { indexed: false, name: "role", type: "string" },
        { indexed: false, name: "approverPK", type: "string" }
      ],
      name: "RoleCreated",
      type: "event"
    }
  ];
  let bytecode =
    "60606040526040516103cd3803806103cd8339810160405280805182019190602001805182019190602001805182019190505042600160405180838152602001828054600181600116156101000203166002900480156100965780601f10610074576101008083540402835291820191610096565b820191906000526020600020905b815481529060010190602001808311610082575b50509250505060405180910390206000816000191690555082600190805190602001906100c49291906102e5565b5081600290805190602001906100db9291906102e5565b5080600390805190602001906100f29291906102e5565b507fb4989bf817c3abb8f0014eb27a892b2e16fe7001f96c2e4afa9b590a4b2bfd60426000546001600260036040518086815260200185600019166000191681526020018060200180602001806020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101c35780601f10610198576101008083540402835291602001916101c3565b820191906000526020600020905b8154815290600101906020018083116101a657829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b50508481038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b50509850505050505050505060405180910390a150505061038a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032657805160ff1916838001178555610354565b82800160010185558215610354579182015b82811115610353578251825591602001919060010190610338565b5b5090506103619190610365565b5090565b61038791905b8082111561038357600081600090555060010161036b565b5090565b90565b6035806103986000396000f3006060604052600080fd00a165627a7a7230582075021c85a7f38f6b3e9398349fbc6eca324e68b5775c04309994dc5c218427690029";
  let args = [_PK, _role, _approverPK];

  //options
  let options = {
    data: bytecode,
    arguments: args
  };

  //create contract
  var contract = new web3.eth.Contract(abi, null, options);

  //deploy the contract
  contract
    .deploy(options)
    .send({ from: web3.eth.accounts[0], gas: 4700000 })
    .then(function(instance) {
      if (instance) {
        contract.options.address = instance.options.address;
        watchForEvents(contract);
        _onSuccess(instance);
      } else {
        _onFailure();
      }
    });
};

//watch out for events
var watchForEvents = function(contract) {
  contract.getPastEvents("RoleCreated").then(function(events) {
    for (let event of events) {
      addToLog(event);
    }
  });
};
