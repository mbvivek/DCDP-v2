createDepartmentContract = function(
  _name,
  _orgId,
  _approverPK,
  _onSuccess,
  _onFailure
) {
  //contract bytecode
  let bytecode =
    "0x60606040526040516103413803806103418339810160405280805182019190602001805190602001909190805182019190505042836040518083815260200182805190602001908083835b60208310151561006f578051825260208201915060208101905060208303925061004a565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405180910390206000816000191690555082600190805190602001906100bd929190610259565b50816002816000191690555080600390805190602001906100df929190610259565b507f1ed045c4c3467093f10aac972624e8b102d430d045921dd3a60f43613dd593cf4260005460016002546003604051808681526020018560001916600019168152602001806020018460001916600019168152602001806020018381038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101bb5780601f10610190576101008083540402835291602001916101bb565b820191906000526020600020905b81548152906001019060200180831161019e57829003601f168201915b505083810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b505097505050505050505060405180910390a15050506102fe565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061029a57805160ff19168380011785556102c8565b828001600101855582156102c8579182015b828111156102c75782518255916020019190600101906102ac565b5b5090506102d591906102d9565b5090565b6102fb91905b808211156102f75760008160009055506001016102df565b5090565b90565b60358061030c6000396000f3006060604052600080fd00a165627a7a7230582001dda97cd7c6c741b69278c62a4a6ebc1ab9e57bea225768ee9390ad6529218f0029";

  //abi
  let abi = [
    {
      inputs: [
        { name: "_name", type: "string" },
        { name: "_orgId", type: "bytes32" },
        { name: "_approverPK", type: "string" }
      ],
      payable: true,
      stateMutability: "payable",
      type: "constructor"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: false, name: "time", type: "uint256" },
        { indexed: false, name: "id", type: "bytes32" },
        { indexed: false, name: "name", type: "string" },
        { indexed: false, name: "orgId", type: "bytes32" },
        { indexed: false, name: "approverPK", type: "string" }
      ],
      name: "DepartmentCreated",
      type: "event"
    }
  ];

  //options {data, arguments}
  let options = {
    data: bytecode,
    arguments: [_name, _orgId, _approverPK]
  };

  //contract
  var contract = new web3.eth.Contract(abi, null, options);

  //deploy the contract
  contract
    .deploy(options)
    .send({
      from: web3.eth.accounts[0],
      gas: 4700000
    })
    .then(function(instance) {
      if (instance) {
        contract.options.address = instance.options.address;
        //get all events
        contract.getPastEvents("DepartmentCreated", {}, function(
          error,
          events
        ) {
          if (error) {
            _onFailure();
          } else {
            for (let event of events) {
              event.contract = contract;
              addToLog(event);
            }
            _onSuccess(instance);
          }
        });
      } else {
        _onFailure();
      }
    });
};
